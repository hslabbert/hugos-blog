<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on Hugo&#39;s Blog</title>
    <link>http://blog.slabnet.com/tags/linux/</link>
    <description>Recent content in Linux on Hugo&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>hugo@slabnet.com (Hugo Slabbert)</managingEditor>
    <webMaster>hugo@slabnet.com (Hugo Slabbert)</webMaster>
    <copyright>&amp;copy; 2016 Hugo Slabbert</copyright>
    <lastBuildDate>Wed, 11 Feb 2009 16:24:50 +0000</lastBuildDate>
    <atom:link href="http://blog.slabnet.com/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Cannot install ESET Security on Debian 4.0 Etch Virtuozzo VPS</title>
      <link>http://blog.slabnet.com/post/cannot-install-eset-security-on-debian-40-etch-virtuozzo-vps/</link>
      <pubDate>Wed, 11 Feb 2009 16:24:50 +0000</pubDate>
      <author>hugo@slabnet.com (Hugo Slabbert)</author>
      <guid>http://blog.slabnet.com/post/cannot-install-eset-security-on-debian-40-etch-virtuozzo-vps/</guid>
      <description>&lt;p&gt;As part of some mail filter testing, I needed to install ESET Mail Security onto a Debian 4.0 Etch VPS running on Virtuozzo. As a side-note, I found that the install package for ESET’s Gateway Filter, Mail Security, and File Server Security for Linux is all the exact same package; the functionality is basically just controlled/activated by means of licensing the appropriate component.&lt;/p&gt;

&lt;p&gt;Anyway, the download comes as an installation script called &lt;code&gt;esets.i386.deb.bin&lt;/code&gt;. Running that script outputs a license agreement that you have to accept, produces a .deb package called &lt;code&gt;esets.i386.deb&lt;/code&gt;, and outputs instructions on how to install the .deb package by using dpkg and import the license file. The .deb package installed just fine on another Debian test box, but when I attempted to run &lt;code&gt;dpkg –i esets.i386.deb&lt;/code&gt; on the Virtuozzo VPS, tar squawked at me that it could not open &lt;code&gt;/dev/stdin&lt;/code&gt; and the installation bailed:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hostname:/usr/local/src/eset# dpkg -i esets-3.0.11.i386.deb
Selecting previously deselected package esets.
(Reading database ... 24639 files and directories currently installed.)
Unpacking esets (from esets-3.0.11.i386.deb) ...
Setting up esets (3.0.11) ...
Unpacking esets modules ...
tar: /dev/stdin: Cannot open: No such file or directory
tar: Error is not recoverable: exiting now
dpkg: error processing esets (--install):
subprocess post-installation script returned error exit status 2
Errors were encountered while processing:
esets
&lt;/code&gt;&lt;/pre&gt;

&lt;!-- more --&gt;

&lt;p&gt;To which I replied, “huh?”&lt;/p&gt;

&lt;p&gt;I took a peek around /dev (&lt;code&gt;ls /dev&lt;/code&gt;), and wouldn’t you know it? No stdin, no stdout, and no stderr! Say what? I checked around ESET’s KB’s, but found nothing related to the issue. I poked around Virtuozzo’s and OpenVZ’s wiki’s, but again came up empty. I checked out the /dev directory (&lt;code&gt;ls –l /dev/&lt;/code&gt;) on my test box on which I had successfully installed the package, and, as expected, /dev/stdin, /dev/stdout, and /dev/stderr were there. Looking more closely, we see that those files are links to a set of files at /proc/self/fd.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hostname:~# ls -l /dev/std*
lrwxrwxrwx 1 root root 15 2009-01-28 02:35 /dev/stderr -&amp;gt; /proc/self/fd/2
lrwxrwxrwx 1 root root 15 2009-01-28 02:35 /dev/stdin -&amp;gt; /proc/self/fd/0
lrwxrwxrwx 1 root root 15 2009-01-28 02:35 /dev/stdout -&amp;gt; /proc/self/fd/1
hostname:~# 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So, on my Debian Virtuozzo VPS, I did the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ln -s /proc/self/fd/0 /dev/stdin
ln -s /proc/self/fd/1 /dev/stdout
ln -s /proc/self/fd/2 /dev/stderr 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I re-ran the package installation, and we were set! I don’t know if this issue is particular to some .deb packages or to all, as I had only used &lt;code&gt;apt-get&lt;/code&gt; up to that point for package installation. As of now, though, I have not yet had any issues with the package or with the links I created…at least not as far as I can tell!&lt;/p&gt;

&lt;p&gt;Let me know if you have any other info on this issue.&lt;/p&gt;

&lt;p&gt;Bitcoin tip address for this post:
&lt;a href=&#34;bitcoin:1PncfTJjuzybqSDcZrP8qJSApHgtZp5B7F&#34;&gt;1PncfTJjuzybqSDcZrP8qJSApHgtZp5B7F&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Workaround for mysqldump SSL error 2026 bug #27669</title>
      <link>http://blog.slabnet.com/post/workaround-for-mysqldump-ssl-error-2026-bug-27669/</link>
      <pubDate>Mon, 09 Feb 2009 16:36:55 +0000</pubDate>
      <author>hugo@slabnet.com (Hugo Slabbert)</author>
      <guid>http://blog.slabnet.com/post/workaround-for-mysqldump-ssl-error-2026-bug-27669/</guid>
      <description>&lt;p&gt;I had not previously played aroung much with MySQL replication, but got the chance to do so recently. I&amp;rsquo;m doing some testing with a new mail filter setup composed of &lt;a href=&#34;http://www.ijs.si/software/amavisd/&#34;&gt;amavisd-new&lt;/a&gt;, &lt;a href=&#34;http://spamassassin.apache.org/&#34;&gt;SpamAssassin&lt;/a&gt;, and some other SA modules running through &lt;a href=&#34;http://www.postfix.org/&#34;&gt;Postfix&lt;/a&gt; on &lt;a href=&#34;http://www.debian.org/&#34;&gt;Debian&lt;/a&gt; Etch. The setup uses &lt;a href=&#34;http://www.maiamailguard.com/&#34;&gt;Maia Mailguard&lt;/a&gt; as a web front-end and management system, including per-user settings and quarantines. We&amp;rsquo;re using MySQL for the database backend for Maia for storing quarantines, per-user settings and the like, but wanted to have a dual-MX setup with a secondary MX sitting in a remote site.&lt;/p&gt;

&lt;p&gt;&lt;!-- more --&gt;So, we needed some way to keep the MySQL data between the two servers in sync. I had looked at &lt;a href=&#34;http://www.drbd.org/&#34;&gt;DRBD&lt;/a&gt; and &lt;a href=&#34;http://www.linux-ha.org/&#34;&gt;linux-ha&lt;/a&gt;, but in the end decided to go with a dual-master &lt;a href=&#34;http://dev.mysql.com/doc/refman/5.0/en/replication.html&#34;&gt;MySQL replication&lt;/a&gt; setup (&lt;a href=&#34;http://www.neocodesoftware.com/replication/&#34;&gt;howto1&lt;/a&gt;, &lt;a href=&#34;http://lug.wsu.edu/node/545/print&#34;&gt;howto2&lt;/a&gt;), using the built-in SSL capabilities in MySQL to encrypt the replication traffic over the WAN. After a bit of tweaking, I got that going, but then noticed that I could no longer perform mysqldump commands on the databases when running the command locally. I got the following error message whenever I tried a mysqldump command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Got error: 2026: SSL connection error when trying to connect&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I wasn&amp;rsquo;t specifying any SSL parameters in the mysqldump command, though, and while I did configure the replication users to require SSL in their user setup, the mysqldump user did not have an SSL requirement. I got to the official MySQL bug report for this error(#&lt;a href=&#34;http://bugs.mysql.com/bug.php?id=27669&#34;&gt;27669&lt;/a&gt;) as well as the patch link. But to be honest, that didn&amp;rsquo;t really get me anywhere. The bug report indicates that this behaviour has been corrected in MySQL release 5.0.42, and I was running release 5.0.32.&lt;/p&gt;

&lt;p&gt;I updated the mysql-client package on a test machine to 5.0.75 and tried the mysqldump again; the same error still occurred. I didn&amp;rsquo;t want to upgrade the actual mysql-server package as well, so I looked elsewhere for a fix. It occurred to me that, in order for the MySQL replication to use SSL, I had specified the SSL-related options (ssl-ca and so forth) in the [client] section of the global configuration file at /etc/mysql/my.cnf. As mysqldump starts a MySQL client connection, it would stand to reason that it uses the [client] configuration settings that it would find in the global config file, and hence would try to use SSL.&lt;/p&gt;

&lt;p&gt;I wanted to get mysqldump to &lt;em&gt;not&lt;/em&gt; use SSL connections, but still wanted my replication traffic to use SSL. Since the mysqld daemon runs under the mysql user account, I moved the ssl-related config options out of the [client] section of the global config file of /etc/mysql/my.cnf, created a new .my.cnf config file in the mysql user&amp;rsquo;s $HOME directory (/var/lib/mysql on my system), and entered just the ssl-related options in a [client] section of that .my.cnf file. I reloaded the mysqld daemon and confirmed that the slave connection to the remote server came up properly. It did; the configuration options for the mysql user includes both the global config file of /etc/mysql/my.cnf and the per-user .my.cnf file I had just created, so it is able to pick up the ssl-related options in the [client] section of the per-user settings.&lt;/p&gt;

&lt;p&gt;NOTE: The ssl-related options I am talking about here are only those configured in the [client] section. The ssl-related options in the [mysqld] section of the global config file can stay where they are. It should work to have those present in the local mysql user&amp;rsquo;s .my.cnf config file, but I did not test this.&lt;/p&gt;

&lt;p&gt;Since no ssl-related options were specified in the global [client] configuration anymore, and no per-user settings were present for the user I was using for the mysqldump command, the command connected without SSL, the SSL error 2026 messages went away, and I was again able to successfully perform MySQL backups from the local machine.&lt;/p&gt;

&lt;p&gt;Bitcoin tip address for this post: 15ZhSjpB8iDRHvzgXphpJ9AhkJUPJw5uE5&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ultimate Guide to Linux Boot Problems</title>
      <link>http://blog.slabnet.com/post/ultimate-guide-to-linux-boot-problems/</link>
      <pubDate>Wed, 16 Jan 2008 18:41:02 +0000</pubDate>
      <author>hugo@slabnet.com (Hugo Slabbert)</author>
      <guid>http://blog.slabnet.com/post/ultimate-guide-to-linux-boot-problems/</guid>
      <description>&lt;p&gt;I haven&amp;rsquo;t played around much in Linux lately, but I finally dusted off my &lt;a href=&#34;http://www.ubuntu.com/&#34;&gt;Ubuntu&lt;/a&gt; CD&amp;rsquo;s and started tooling around again. I already had Vista installation on my work laptop, and did not want to blow that away, so I erred on the side of caution by not letting the Xubuntu setup program install its own GRUB bootloader&amp;hellip;except then I couldn&amp;rsquo;t get into the Linux OS&amp;hellip;&lt;/p&gt;

&lt;p&gt;So, off I go in search of GRUB install guides, and just about every how-to out there is using the basic scenario that GRUB was installed in the first place, and that it just needs to reinstall itself, which was totally not the case this time around!&lt;/p&gt;

&lt;p&gt;Anyway, after searching and searching and booting back and forth multiple times between Vista (slow boot!) and the Xubuntu live CD (which is somehow booting faster, even though it&amp;rsquo;s discovering all of the hardware for the first time), I finally stumbled across an absolute gem for Linux booting troubleshooting.&lt;/p&gt;

&lt;p&gt;I have to say this is by &lt;em&gt;FAR&lt;/em&gt; the most conclusive coverage I have EVER seen for resolving Linux boot issues. Lilo and GRUB issues are covered with tonnes of different scenarios, including dual-booting and the dreaded Vista BCD bootloader. If you have run just about ANY Linux distro, you need this reference. And don&amp;rsquo;t tell me that you&amp;rsquo;ve never had boot loader issues, &amp;lsquo;cuz it will happen to you!&lt;/p&gt;

&lt;p&gt;Check it out &lt;a href=&#34;http://www.justlinux.com/forum/showthread.php?s=7b4f3007a3173da87ba7e5683965a271&amp;amp;t=144294&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>